services:
  kafka:
    image: bitnami/kafka:3.9.0
    container_name: kafka
    networks:
      - my-network
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=local-cluster

  mongo:
    image: mongo:4.0
    container_name: mongo_dockerizado
    ports:
      - "27017:27017"
    volumes:
      - ./resources:/resources
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - my-network

  spark-master:
    image: bitnami/spark:3.5.3
    container_name: spark-master
    ports:
      - "7077:7077"
      - "8082:8080"
    environment:
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_MODE=master
    volumes:
      - ./flight_prediction/target/scala-2.12:/opt/spark-apps
      - ./models:/opt/models
    networks:
      - my-network

  spark-worker-1:
    image: bitnami/spark:3.5.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8084:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - ./flight_prediction/target/scala-2.12:/opt/spark-apps
      - ./models:/opt/models
    networks:
      - my-network

  spark-worker-2:
    image: bitnami/spark:3.5.3
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8085:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - ./flight_prediction/target/scala-2.12:/opt/spark-apps
      - ./models:/opt/models
    networks:
      - my-network
      
  spark-submit:
    image: bitnami/spark:3.5.3
    container_name: spark-submit
    depends_on:
      - spark-master
      - spark-worker-1
      - spark-worker-2
    volumes:
      - ./flight_prediction/target/scala-2.12:/opt/spark-apps  
      - ./models:/opt/models
    networks:
      - my-network
    command: >
      /opt/bitnami/spark/bin/spark-submit
      --packages org.mongodb.spark:mongo-spark-connector_2.12:10.4.1,org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.3
      --class es.upm.dit.ging.predictor.MakePrediction
      --deploy-mode client
      --master spark://spark-master:7077
      local:///opt/spark-apps/flight_prediction_2.12-0.1.jar
      kafka:9092 mongo:27017

  flask:
    build:
      context: .
      dockerfile: Dockerfile_flask
    container_name: flask_app
    ports: 
      - 5003:5003
    depends_on:
      - kafka
      - spark-master
      - mongo
    environment:
      - PROJECT_HOME=/app
    networks:
      - my-network
      
  nifi:
    image: apache/nifi:1.25.0
    container_name: nifi
    environment:
      - NIFI_WEB_HTTP_PORT=8080
    ports:
      - "8080:8080"
    networks:
      - my-network
      
volumes:
  mongo-data:
    driver: local
  
networks:
  my-network:
    driver: bridge

